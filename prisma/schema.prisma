generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  username     String    @unique
  password     String
  role         String    @default("user")
  balance      Float     @default(0)
  credits      Int       @default(0)
  member_level String    @default("NORMAL") @map("member_level")
  reputation   Int       @default(100)
  created_at   DateTime  @default(now()) @map("created_at")
  updated_at   DateTime  @updatedAt @map("updated_at")
  last_login   DateTime? @map("last_login")
  
  // 关联
  transactions Transaction[]
  credit_logs  CreditLog[]
  bets         Bet[]

  @@map("users")
}

model Transaction {
  id          String   @id @default(uuid())
  user_id     String   @map("user_id")
  amount      Float
  type        String   // DEPOSIT, WITHDRAW, BET, WIN
  status      String   @default("PENDING") // PENDING, COMPLETED, FAILED
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  description String?

  user User @relation(fields: [user_id], references: [id])

  @@map("transactions")
}

model CreditLog {
  id          String   @id @default(uuid())
  user_id     String   @map("user_id")
  amount      Int
  type        String   // EARN, SPEND
  created_at  DateTime @default(now()) @map("created_at")
  description String?

  user User @relation(fields: [user_id], references: [id])

  @@map("credit_logs")
}

model Bet {
  id          String   @id @default(uuid())
  user_id     String   @map("user_id")
  amount      Float
  game_type   String   @map("game_type")
  numbers     String[]
  status      String   @default("PENDING") // PENDING, WON, LOST
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  result      String?

  user User @relation(fields: [user_id], references: [id])

  @@map("bets")
} 